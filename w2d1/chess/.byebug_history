c
next
opp_color
next
color
step
new_board.in_check?(piece.color)
self
next
moves
next
@board[forward_two].is_a?(NullPiece)
!forward_two.is_a?(NullPiece)
forward_two.is_a?(NullPiece)
forward_two
next
forward_two
moves
next
forward_one
right_capture
c
piece.build_moves
piece.class
piece
step
pieces.first.class
pieces
step
opp_pieces.first.class
opp_pieces.first.type
opp_pieces.first
pieces.first
possible_moves(opp_pieces)
next
player_pieces(opp_color).length
player_pieces(opp_color)
opp_color
next
color
c
color
king_pos(:white)
opponent_moves
next
display moves
moves
next
moves
step
moves
step
piece
step
opp_pieces.length
step
pieces.length
pieces[-2]
pieces[-2].color
pieces[-1].color
color
pieces
piece
pieces
next
step
color
step
opp_color
step
color
opp_color
c
@board[right_capture]
right_capture
c
next
new_pos
step
c
display moves
moves
c
step
moves
step
new_square
step
new_pos
step
moves
step
y
x
step
pos
step
new_pos
moves
step
@board[new_pos]
@board
new_pos
step
new_pos
c
next
code
next
key
c
self.cursorc
self.cursor
self
@cursor_pos
new_pos
diff
step
key
step
