c
exit
board.grid
board
game.board
second_card
exit
c
secord_card
second_card
continue
next
first_card
next
first_card
c
first_card.value
c
player
c
player
c
player
comp
c
next
found_pairs
next
card
next
card
next
step
next
card
step
setep
step
next
card
step
ste
step
@board[i,j]
step
display j
display i
step
@board.grid.length
@board.grid
@board
self
c
step
found_pairs
known_pairs
c
known_pairs
c
known_pairs
c
@board.grid[0][0]
@board
@board[0]
@board[0][0]
display j
display i
i
@board[i][j]
step
display j
display i
i
c
step
@board.step
@board.grid[0].length
@board.grid[0][0]
@board.grid
@board.class
@board.type
@board
display j
display i
i
@board[i][j]
step
self.board.grid[0].length
self.board.grid[0]
self
display i
i
c
(0...self.board.grid.length)
self.board.grid.length
self.board.grid
self.board
c
self.board
self
c
self.board
self
comp
comp.board
board
c
board.grid.length
board.grid
board
c
board
c
board[*guess1]
board[guess1]
board
guess1
step
guess
step
0,0
step
board
game.board
c
exit
game.play_turn
game = Game.new
load('memory-puzzle.rb')
@board.reveal(0,0)
@board.reveal([0,0])
@board.reveal()
@board.methods
@board.reveal(guess1)
@board
guess1
next
step
board
